#!/bin/bash

# =========================================
# GHDL VHDL Automation Script
# For local use and GitHub Actions CI
# =========================================

# Detect if the script is running on Linux system
IS_LINUX=false
if [[ "$(uname -s)" == "Linux" ]]; then
    IS_LINUX=true
fi

# Define variables
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
SRC_DIR="$SCRIPT_DIR/../src"
UTILS_DIR="$SCRIPT_DIR/../utils"
TB_DIR="$SCRIPT_DIR/../tb"
BUILD_DIR="$SCRIPT_DIR/../build"
LOG_DIR="$BUILD_DIR/logs"
WAVE_DIR="$BUILD_DIR/waves"

# Create build, log and wave directory
mkdir -p "$BUILD_DIR"
mkdir -p "$LOG_DIR"
mkdir -p "$WAVE_DIR"
cd "$BUILD_DIR"

# Analyze all source files
echo "Analyzing VHDL sources..."
ghdl -a "$SRC_DIR"/*.vhd
ghdl -a "$UTILS_DIR"/*.vhd

pass_count=0
fail_count=0
# Run all testbenches
for tb_file in ../tb/tb_*.vhd; do
    tb_name=$(basename "$tb_file" .vhd)
    if [[ "$GITHUB_ACTIONS" == "true" ]]; then
        echo "::group::Starting $tb_name"
    else
        echo "===== Starting $tb_name ====="
    fi

    echo "Compiling: Testbench $tb_name"
    if ! ghdl -a "$tb_file" || ! ghdl -e "$tb_name"; then
        ((fail_count++))
        echo "::error::Failed to compile $tb_name"
        continue
    fi

    echo "Running: Testbench $tb_name"
    wave_file="$WAVE_DIR/${tb_name}.ghw"
    if ghdl -r "$tb_name" --wave="$wave_file"; then
        ((pass_count++))
        if [[ "$GITHUB_ACTIONS" == "true" ]]; then
            echo "::notice::Testbench $tb_name passed"
        else
            echo "Testbench $tb_name passed"
        fi
    else
        ((fail_count++))
        if [[ "$GITHUB_ACTIONS" == "true" ]]; then
            echo "::error::Testbench $tb_name failed"
        else
            echo "Testbench $tb_name failed"
        fi
    fi

    # Handle the log file
    src_log="${tb_name}_log.txt"
    if [[ -f "$src_log" ]]; then
        timestamp=$(date +%Y-%m-%dT%H-%M-%S)
        mv "$src_log" "$LOG_DIR/${tb_name}_${timestamp}.log"
    else
        echo "Warning: Log file $src_log not found."
    fi

    if [[ "$GITHUB_ACTIONS" == "true" ]]; then
        echo "::endgroup::"
    fi
done

if [[ "$GITHUB_ACTIONS" == "true" ]]; then
    {
        echo "## GHDL Test Summary"
        echo "- Passed: $pass_count"
        echo "- Failed: $fail_count"
    } >> "$GITHUB_STEP_SUMMARY"
else
    echo "=============================="
    echo "Test Summary:"
    echo "Passed: $pass_count"
    echo "Failed: $fail_count"
    echo "=============================="
fi

if [[ $fail_count -gt 0 ]]; then
    exit 1
fi

# Clean up any intermediate files generated by GHDL
ghdl --clean
rm -f *.cf